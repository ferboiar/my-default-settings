#!/bin/sh
###########################
# my-default-settings     #
#                         #
# Updated On: 19/05/2022  #
###########################

#version=$(uci -q get base_config.@status[0].version)

uci set luci.main.lang=auto
#uci set luci.main.mediaurlbase=/luci-static/bootstrap-dark
uci set luci.main.mediaurlbase=/luci-static/material
#uci set luci.main.mediaurlbase=/luci-static/argon
uci set argon.@global[0].mode='dark'
uci set argon.@global[0].bing_background='1'
uci commit luci

# Screen settings
cat >> /etc/screenrc << EOF
defscrollback 1000
termcapinfo xterm ti@:te@
hardstatus alwayslastline '%{= kG}[ %{G}%H %{g}][%= %{= kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B} %d/%m %{W}%c %{g}]'
vbell off
EOF

# acme installation fix: https://wiki.terrabase.info/wiki/LetsEncrypt_with_ACME_on_OpenWRT
# change YourEmail@YourProvider.com to your account email
#mv /usr/lib/acme /usr/lib/acme.OPKG
#mkdir /usr/lib/acme
#cp /usr/lib/acme.OPKG/run-acme /usr/lib/acme/
#/usr/lib/acme.OPKG/acme.sh --install --home /usr/lib/acme --cert-home /etc/acme/certs --config-home /etc/acme/config --accountemail YourEmail@YourProvider.com --accountkey /etc/acme/account --useragent "" --log /var/log/acme.log
cat >> /etc/profile << EOF
export LE_WORKING_DIR="/usr/lib/acme"
export LE_CONFIG_HOME="/etc/acme/config"
alias acme.sh="/usr/lib/acme/acme.sh --config-home '/etc/acme/config'"
EOF

#Prompt colors
sed -i 's/^export PS1.*/export PS1='\''\\\[\\033\[01;31m\\\]\\h\\\[\\033\[01;30m\\\]@\\\[\\033\[01;32m\\\]\\w\\\[\\033\[01;34m\\\] #\\\[\\033\[00m\\\] '\''/' /etc/profile

uci set fstab.@global[0].anon_mount=1
uci commit fstab

host=$(cat /tmp/sysinfo/model | cut -d" " -f2 | tr '[A-Z]' '[a-z]')

uci -q batch <<-EOF
set system.@system[0].hostname=$host
set system.@system[0].timezone='CET-1CEST-2,M3.5.0/02:00:00,M10.5.0/03:00:00'
set system.@system[0].zonename='Europe/Madrid'
delete system.ntp.server
add_list system.ntp.server='hora.roa.es'
add_list system.ntp.server='hora.rediris.es'
add_list system.ntp.server='pulsar.rediris.es'
add_list system.ntp.server='minuto.roa.es'
EOF
uci commit system

# log level
# 8 debug, 5 warning
uci set system.@system[0].conloglevel='5'
# 5 debug, 9 warning
uci set system.@system[0].cronloglevel='9'
uci commit system

if [ "$(uci -q get dhcp.@dnsmasq[0].port)" != "53" ]; then
	uci -q set dhcp.@dnsmasq[0].port='53'
	uci commit dhcp
fi

echo "$(uci -q get uhttpd.main.index_page)" | grep -q "cgi-bin/luci" ||
	uci -q add_list uhttpd.main.index_page='cgi-bin/luci' && uci commit uhttpd

# MAGIC=$(wget -qO - https://raw.githubusercontent.com/DevOpenWRT-Router/Linksys_OpenWRT_Releases/main/packages/kmod | sed -n "1p")
# echo "src/gz purefusion_kmods https://raw.githubusercontent.com/DevOpenWRT-Router/Linksys_OpenWRT_Releases/main/kmods/$MAGIC" >> /etc/opkg/distfeeds.conf
#echo "src/gz purefusion_kmods https://raw.githubusercontent.com/DevOpenWRT-Router/Linksys_OpenWRT_Releases/main/kmods/$(wget -qO - https://raw.githubusercontent.com/DevOpenWRT-Router/Linksys_OpenWRT_Releases/main/packages/kmod | sed -n "1p")" >> /etc/opkg/distfeeds.conf

#echo 'src/gz purefusion_packages https://raw.githubusercontent.com/DevOpenWRT-Router/Linksys_OpenWRT_Releases/main/packages/packages' >> /etc/opkg/distfeeds.conf
#echo 'src/gz purefusion_base https://raw.githubusercontent.com/DevOpenWRT-Router/Linksys_OpenWRT_Releases/main/packages/base' >> /etc/opkg/distfeeds.conf
#echo 'src/gz purefusion_luci https://raw.githubusercontent.com/DevOpenWRT-Router/Linksys_OpenWRT_Releases/main/packages/luci' >> /etc/opkg/distfeeds.conf
#echo 'src/gz purefusion_routing https://raw.githubusercontent.com/DevOpenWRT-Router/Linksys_OpenWRT_Releases/main/packages/routing' >> /etc/opkg/distfeeds.conf
#echo 'src/gz purefusion_telephony https://raw.githubusercontent.com/DevOpenWRT-Router/Linksys_OpenWRT_Releases/main/packages/telephony' >> /etc/opkg/distfeeds.conf
#sed -i '/tomato/d' /etc/opkg/distfeeds.conf

ln -sf /sbin/ip /usr/bin/ip

### -------------------------------------------- S Q M ------------------------------------------------------- ###

WAN_IFACE=`uci get network.wan.device`
uci set sqm.eth1.interface=$WAN_IFACE
uci commit sqm
/etc/init.d/sqm reload

echo "0 6,14,22 * * * /usr/lib/OpenWrtScripts/autoSQM.sh" >> /etc/crontabs/root
crontab /etc/crontabs/root

### ---------------------------------------------------------------------------------------------------------- ###

## Lets keep Wireless Enabled (after downloading the firmware, the wireless is turned off by default)
# ref: https://forum.openwrt.org/t/solved-enable-wi-fi-and-connect-to-a-network-on-first-boot/47399/24
#sed -i '/option disabled/d' /etc/config/wireless
# wifi off: set wireless.radio${devidx}.disabled=1
# wifi on: set wireless.radio${devidx}.disabled=0
#sed -i 's/set wireless.radio${devidx}.disabled=1/set wireless.radio${devidx}.disabled=0/g' /lib/wifi/mac80211.sh
#wifi up

# kB
# wrt32x: 512 MB RAM DDR3 / 256 MB flash memory
memtotal=$(grep MemTotal /proc/meminfo | awk '{print $2}')
if test "$memtotal" -ge 1048576; then
	# > 1024M
	cachesize=10000
	dnsforwardmax=10000
	nf_conntrack_max=262144
elif test "$memtotal" -ge 524288; then
	# <= 1024M
	cachesize=10000
	dnsforwardmax=10000
	nf_conntrack_max=131072
elif test "$memtotal" -ge 262144; then
	# <= 512M (wrt32x here!)
	cachesize=8192
	dnsforwardmax=8192
	nf_conntrack_max=65536
elif test "$memtotal" -ge 131072; then
	# <= 256M
	cachesize=4096
	dnsforwardmax=4096
	nf_conntrack_max=65536
elif test "$memtotal" -ge 65536; then
	# <= 128M
	cachesize=2048
	dnsforwardmax=2048
	nf_conntrack_max=32768
else
	# < 64M
	cachesize=1024
	dnsforwardmax=1024
	nf_conntrack_max=16384
fi

uci -q set dhcp.@dnsmasq[0].cachesize="$cachesize"
uci -q set dhcp.@dnsmasq[0].dnsforwardmax="$dnsforwardmax"
uci commit dhcp

# sysctl overwrite
SYSCTL_LOCAL=/etc/sysctl.d/50-local.conf
mkdir -p /etc/sysctl.d
printf >"$SYSCTL_LOCAL"
echo net.nf_conntrack_max="$nf_conntrack_max" >>"$SYSCTL_LOCAL"
# echo net.ipv4.ip_early_demux=0 >>"$SYSCTL_LOCAL"
# echo net.bridge.bridge-nf-call-iptables=0 >>"$SYSCTL_LOCAL"
# echo net.ipv4.fib_multipath_hash_policy=1 >>"$SYSCTL_LOCAL"
# echo net.ipv4.tcp_congestion_control=cubic >>"$SYSCTL_LOCAL"
# echo net.netfilter.nf_conntrack_helper=1 >>"$SYSCTL_LOCAL"
# Modificar la longitud de la cola de mensajes:
echo kernel.msgmax = 65536 >>"$SYSCTL_LOCAL"
echo kernel.msgmnb = 65536 >>"$SYSCTL_LOCAL"
# cierra la partición de intercambio:
echo vm.swappiness=0 >>"$SYSCTL_LOCAL"

# hsts=1/on/yes: same as --hsts
# hsts=0/off/no: same as --no-hsts
# --no-hsts
#    Wget supports HSTS (HTTP Strict Transport Security, RFC 6797) by default. Use ‘--no-hsts’ to make Wget 
#    act as a non-HSTS-compliant UA. As a consequence, Wget would ignore all the Strict-Transport-Security 
#    headers, and would not enforce any existing HSTS policy.
#
echo 'hsts=0' > /root/.wgetrc

# packet_steering
# use every cpu to handle packet traffic
#uci set network.globals.packet_steering='1'
#uci commit network
#/etc/init.d/network restart

#uci -q set base_config.@status[0].version="$version"
#uci commit base_config

# luci cache
rm -rf /tmp/luci-modulecache
rm -f /tmp/luci-indexcache*
rm -rf /tmp/luci-*

##############################################################################
# >>>>>>>>>>>>>>>>>>>>>>>  H  A  R  D  E  N  I  N  G <<<<<<<<<<<<<<<<<<<<<<< #
##############################################################################
#
# > Restrict SSH access to the local network (LAN)
#
uci set dropbear.@dropbear[0].Interface='lan'
uci commit dropbear
service dropbear restart 
# -- END --
#
# > Ensure that we use/redirect to HTTPS always
#
uci set uhttpd.main.redirect_https='1'
uci commit uhttpd
service uhttpd restart
service uhttpd enable
# -- END --
#
# > BCP38: http://www.bcp38.info/index.php/Main_Page
#
# This is less about protecting your router and more about preventing your network's 
# contribution to some types of DoS/DDoS attack
uci set bcp38.@bcp38[0].enabled='1'
uci set bcp38.@bcp38[0].interface=$WAN_IFACE #Adjust to match your WAN port - may be something like eth0.2 for example.
uci commit bcp38 

service bcp38 restart
service bcp38 enable
# -- END --
#
# > BanIP: https://github.com/openwrt/packages/blob/master/net/banip/files/README.md
#
uci set banip.global.ban_enabled='1'
uci set banip.global.ban_trigger='wan'
uci set banip.global.ban_autodetect='1'
uci set banip.global.ban_logsrc_enabled='1'
uci set banip.global.ban_maxqueue='4'
uci set banip.global.ban_fetchutil='wget'
uci set banip.global.ban_fetchinsecure='1'
uci set banip.global.ban_global_settype='src+dst'
uci set banip.global.ban_target_src='DROP'
uci set banip.global.ban_target_dst='REJECT'
uci delete banip.global.ban_settype_src
uci add_list banip.global.ban_settype_src='country'
uci add_list banip.global.ban_settype_src='dshield'
uci set banip.global.ban_loglimit='100'
uci set banip.global.ban_logopts_src='-m limit --limit 2/sec'
uci set banip.global.ban_localsources='blacklist'
uci set banip.global.ban_autoblacklist='1'
uci set banip.global.ban_autowhitelist='1'
uci delete banip.global.ban_sources
uci add_list banip.global.ban_sources='darklist'
uci add_list banip.global.ban_sources='debl'
uci add_list banip.global.ban_sources='drop'
uci add_list banip.global.ban_sources='feodo'
uci add_list banip.global.ban_sources='firehol1'
uci add_list banip.global.ban_sources='greensnow'
uci add_list banip.global.ban_sources='iblockads'
uci add_list banip.global.ban_sources='iblockspy'
uci add_list banip.global.ban_sources='myip'
uci add_list banip.global.ban_sources='nixspam'
uci add_list banip.global.ban_sources='proxy'
uci add_list banip.global.ban_sources='sslbl'
uci add_list banip.global.ban_sources='talos'
uci add_list banip.global.ban_sources='threat'
uci add_list banip.global.ban_sources='tor'
uci add_list banip.global.ban_sources='uceprotect1'
uci add_list banip.global.ban_sources='yoyo'
uci delete banip.global.ban_countries
uci add_list banip.global.ban_countries='ru'
uci add_list banip.global.ban_countries='cn'
uci add_list banip.global.ban_countries='af'
uci add_list banip.global.ban_countries='iq'
uci add_list banip.global.ban_countries='ua'
uci add_list banip.global.ban_countries='ao'
uci add_list banip.global.ban_countries='ai'
uci add_list banip.global.ban_countries='ar'
uci add_list banip.global.ban_countries='az'
uci add_list banip.global.ban_countries='bd'
uci add_list banip.global.ban_countries='by'
uci add_list banip.global.ban_countries='br'

# Allowlist a few sites that I've seen some blocklists break before.
echo "enro.com" >> /etc/banip/banip.whitelist
echo "www.reddit.com" >> /etc/banip/banip.whitelist
echo "yelp.com" >> /etc/banip/banip.whitelist

uci commit banip
service banip restart
service banip enable

# refreshing the blocklists every 24 hours
echo "15 07 * * * /etc/init.d/banip reload" >> /etc/crontabs/root
crontab /etc/crontabs/root
# -- END --
#
# > adblock
#
uci set adblock.global.adb_enabled='1'
uci set adblock.global.adb_trigger='wan'
uci set adblock.global.adb_debug='0'
uci set adblock.global.adb_dnsfilereset='0'
uci set adblock.global.adb_mail='0'
uci set adblock.global.adb_report='0'
uci set adblock.global.adb_backup='1'
uci set adblock.global.adb_maxqueue='4'
uci set adblock.global.adb_dns='dnsmasq'
uci set adblock.global.adb_fetchutil='wget'
uci set adblock.global.adb_fetchinsecure='1'
uci set adblock.global.adb_dnsinstance='0'
uci set adblock.global.adb_eng_sources='bluGo/formats/domains.txt'
uci set adblock.global.adb_forcedns='1'
uci set adblock.global.adb_zonelist='lan'
uci set adblock.global.adb_stb_sources='alternates/fakenews/hosts'
uci set adblock.global.adb_safesearch='0'
uci delete adblock.global.adb_utc_sources
uci add_list adblock.global.adb_utc_sources='drogue'
uci add_list adblock.global.adb_utc_sources='adult'
uci add_list adblock.global.adb_utc_sources='associations_religieuses'
uci add_list adblock.global.adb_utc_sources='bitcoin'
uci add_list adblock.global.adb_utc_sources='phishing'
uci add_list adblock.global.adb_utc_sources='malware'
uci delete adblock.global.adb_sources
uci add_list adblock.global.adb_sources='adaway'
uci add_list adblock.global.adb_sources='adguard'
uci add_list adblock.global.adb_sources='andryou'
uci add_list adblock.global.adb_sources='anti_ad'
uci add_list adblock.global.adb_sources='anudeep'
uci add_list adblock.global.adb_sources='disconnect'
uci add_list adblock.global.adb_sources='energized'
uci add_list adblock.global.adb_sources='openphish'
uci add_list adblock.global.adb_sources='reg_es'
uci add_list adblock.global.adb_sources='spam404'
uci add_list adblock.global.adb_sources='stevenblack'
uci add_list adblock.global.adb_sources='stopforumspam'
uci add_list adblock.global.adb_sources='whocares'
uci add_list adblock.global.adb_sources='yoyo'

uci commit adblock
service adblock restart
service adblock enable

# refreshing the blocklists every 24 hours
echo "16 07 * * * /etc/init.d/adblock reload" >> /etc/crontabs/root
crontab /etc/crontabs/root
#
# > Firewall DROP external connections
# 
if [ $(uci get firewall.@zone[0].name) = 'wan' ]; then zona=0
elif [ $(uci get firewall.@zone[-1].name) = 'wan' ]; then zona=-1
elif [ $(uci get firewall.@zone[-2].name) = 'wan' ]; then zona=-2
fi

uci set firewall.@zone[$zona].input='DROP'
uci set firewall.@zone[$zona].forward='DROP'
uci commit firewall
service firewall restart
# -- END --

exit 0
